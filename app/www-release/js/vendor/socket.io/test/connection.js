var expect=require("expect.js"),io=require("../"),hasCORS=require("has-cors"),b64=require("base64-js"),textBlobBuilder=require("text-blob-builder");describe("connection",function(){this.timeout(1e4);var e=io();it("should connect to localhost",function(t){e.emit("hi"),e.on("hi",function(e){t()})}),it("should work with acks",function(t){e.emit("ack"),e.on("ack",function(e){e(5,{test:!0})}),e.on("got it",t)}),it("should work with false",function(t){e.emit("false"),e.on("false",function(e){expect(e).to.be(!1),t()})}),it("should connect to a namespace after connection established",function(e){var t=io.Manager(),n=t.socket("/");n.on("connect",function(){var r=t.socket("/foo");r.on("connect",function(){r.close(),n.close(),e()})})}),!global.Blob&&!global.ArrayBuffer&&it("should get base64 data as a last resort",function(t){e.on("takebin",function(e){expect(e.base64).to.be(!0);var n=b64.toByteArray(e.data),r=String.fromCharCode.apply(String,n);expect(r).to.eql("asdfasdf"),t()}),e.emit("getbin")});if(global.ArrayBuffer){var t=require("base64-arraybuffer");it("should get binary data (as an ArrayBuffer)",function(t){e.emit("doge"),e.on("doge",function(e){expect(e instanceof ArrayBuffer).to.be(!0),t()})}),it("should send binary data (as an ArrayBuffer)",function(n){e.on("buffack",function(){n()});var r=t.decode("asdfasdf");e.emit("buffa",r)}),it("should send binary data (as an ArrayBuffer) mixed with json",function(n){e.on("jsonbuff-ack",function(){n()});var r=t.decode("howdy");e.emit("jsonbuff",{hello:"lol",message:r,goodbye:"gotcha"})}),it("should send events with ArrayBuffers in the correct order",function(n){e.on("abuff2-ack",function(){n()});var r=t.decode("abuff1");e.emit("abuff1",r),e.emit("abuff2","please arrive second")})}global.Blob&&null!=textBlobBuilder("xxx")&&(it("should send binary data (as a Blob)",function(t){e.on("back",function(){t()});var n=textBlobBuilder("hello world");e.emit("blob",n)}),it("should send binary data (as a Blob) mixed with json",function(t){e.on("jsonblob-ack",function(){t()});var n=textBlobBuilder("EEEEEEEEE");e.emit("jsonblob",{hello:"lol",message:n,goodbye:"gotcha"})}),it("should send events with Blobs in the correct order",function(t){e.on("blob3-ack",function(){t()});var n=textBlobBuilder("BLOBBLOB");e.emit("blob1",n),e.emit("blob2","second"),e.emit("blob3",n)}),it("should clear its packet buffer in case of disconnect",function(t){var n=textBlobBuilder("BLOBBLOB");for(var r=0;r<10;r++)e.emit("asdf",n);expect(e.io.packetBuffer.length).to.not.be(0),expect(e.io.encoding).to.be(!0),e.io.disconnect(),expect(e.io.packetBuffer.length).to.be(0),expect(e.io.encoding).to.be(!1),t()}))});