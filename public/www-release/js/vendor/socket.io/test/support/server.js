var io=require("socket.io"),server=io(process.env.ZUUL_PORT),expect=require("expect.js");server.on("connection",function(e){e.on("hi",function(){e.emit("hi")}),e.on("ack",function(){e.emit("ack",function(t,n){t==5&&n.test&&e.emit("got it")})}),e.on("false",function(){e.emit("false",!1)}),e.on("doge",function(){buf=new Buffer("asdfasdf","utf8"),e.emit("doge",buf)}),e.on("buffa",function(t){Buffer.isBuffer(t)&&e.emit("buffack")}),e.on("jsonbuff",function(t){expect(t.hello).to.eql("lol"),expect(Buffer.isBuffer(t.message)).to.be(!0),expect(t.goodbye).to.eql("gotcha"),e.emit("jsonbuff-ack")});var t=!1;e.on("abuff1",function(e){expect(Buffer.isBuffer(e)).to.be(!0),t=!0}),e.on("abuff2",function(n){expect(t).to.be(!0),e.emit("abuff2-ack")}),e.on("blob",function(t){Buffer.isBuffer(t)&&e.emit("back")}),e.on("jsonblob",function(t){expect(t.hello).to.eql("lol"),expect(Buffer.isBuffer(t.message)).to.be(!0),expect(t.goodbye).to.eql("gotcha"),e.emit("jsonblob-ack")});var n=!1,r=!1;e.on("blob1",function(e){expect(Buffer.isBuffer(e)).to.be(!0),n=!0}),e.on("blob2",function(e){expect(n).to.be(!0),expect(e).to.eql("second"),r=!0}),e.on("blob3",function(t){expect(Buffer.isBuffer(t)).to.be(!0),expect(n).to.be(!0),expect(r).to.be(!0),e.emit("blob3-ack")}),e.on("getbin",function(){buf=new Buffer("asdfasdf","utf8"),e.emit("takebin",buf)})});